<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
   mapper标签:配置各类声明
   namespace：名称空间，由于映射文件可能有多个，为了防止crud语句的唯一标识被重复，需要设置空间名称。
 -->

<mapper namespace="css.security.dao.MenuDao">

    <sql id="selectMenuVo">
        select id,name,linkUrl,path,priority,icon,parentmenuid,visible,perms,create_By,create_Time,update_By,update_Time,menu_type from t_menu
    </sql>

    <!--添加子菜单-->
    <insert id="add" parameterType="css.security.entity.Menu" useGeneratedKeys="true" keyProperty="id">
        insert into t_menu (name,linkUrl,parentmenuid)
        values (
        #{name},
        #{linkUrl},
        #{parentmenuid}
        )
    </insert>

    <!--编辑菜单-->
    <update id="updateMenu" parameterType="css.security.entity.Menu">
        update t_menu
        <set>
            <if test="name != null and name != ''">name = #{menuName},</if>
            <if test="parentmenuid != null and parentmenuid != 0">parentmenuid = #{parentId},</if>
            <if test="priority != null and priority != ''">priority = #{orderNum},</if>
            <if test="path != null and path != ''">path = #{path},</if>
            <if test="linkUrl != null and linkUrl != ''">linkurl = #{linkUrl},</if>
            <if test="menuType != null and menuType != ''">menu_type = #{menuType},</if>
            <if test="visible != null">visible = #{visible},</if>
            <if test="perms !=null">perms = #{perms},</if>
            <if test="icon !=null and icon != ''">icon = #{icon},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = now()::timestamp(0)without time zone
        </set>
        where id = #{id}
    </update>

    <update id="checkDeptNameUnique" parameterType="css.security.entity.Menu">
        <include refid="selectMenuVo"/>
        where name = #{name} and parentmenuid = #{parentmenuid}
    </update>

    <delete id="deleteMenuById" parameterType="integer">
        delete from t_menu where id = #{id}
    </delete>

    <!--查询一级菜单-->
    <select id="findFirstMenu" resultType="css.security.entity.Menu">
        select * from t_menu where parentmenuid is NULL
    </select>

    <!--查询二级菜单-->
    <select id="findSecondMenu" resultType="css.security.entity.Menu">
        select * from t_menu where parentmenuid = #{id} ORDER BY id
    </select>

    <!--通过id查询菜单-->
    <select id="findMenuById" resultType="css.security.entity.Menu">
        select * from t_menu where id = #{id}
    </select>

    <!--通过id查询角色和菜单表间是否有约束-->
    <select id="findRelationByMenuId" parameterType="integer" resultType="java.lang.Integer">
        select count(*) from t_role_menu where menu_id = #{id}
    </select>

    <!--通过用户名查询对应的menu_id-->
    <select id="findMenuIdByUsername" parameterType="string" resultType="java.lang.Integer">
        SELECT distinct menu_id from t_role_menu
        WHERE role_id in (SELECT role_id from t_user_role
        WHERE user_id = (SELECT id from t_user
        WHERE username = #{username}))
    </select>

    <!--通过menu_id获取一级菜单-->
    <select id="getMenuListFirst" resultType="css.security.entity.Menu">
        select * from t_menu where parentmenuid is NULL and id in
        <foreach collection="menuIds" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        ORDER BY id
    </select>

    <select id="findTree" resultType="css.security.entity.Menu">
        select id,name,linkUrl,path,priority,icon,parentmenuid,visible,perms,create_By,create_Time,update_By,update_Time,menu_type from t_menu
    </select>

    <!--通过菜单id查询对应父级id-->
    <select id="findParentMenuId"  resultType="java.lang.Integer">
        select parentmenuid from t_menu where id = #{menuId};
    </select>


</mapper>
