<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="css.security.dao.UserDao">

    <select id="findByUserName" resultType="css.security.entity.SysUser">
        select * from t_user where username = #{username}
    </select>

    <insert id="add" keyProperty="user.id" useGeneratedKeys="true">
        insert into t_user (birthday,gender,username,remark,station,telephone,dept_id)
          values (#{user.birthday},#{user.gender},#{user.username},#{user.remark},#{user.station},#{user.telephone},#{user.deptid})
    </insert>

    <insert id="setUserAndRole" parameterType="hashmap">
        insert into t_user_role (user_id,role_id)
            values
            (#{user_id},#{role_id})
    </insert>

    <update id="edit" parameterType="css.security.entity.SysUser">
        update t_user
        <set>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
            <if test="station != null">
                station = #{station},
            </if>
            <if test="telephone != null">
                telephone = #{telephone},
            </if>
            <if test="deptid != null">
                dept_id = #{deptid}
            </if>
        </set>
        where id = #{id}
    </update>

    <insert id="setUserAndDept" parameterType="hashmap">
         insert into t_user_dept (user_id,dept_id)
            values
            (#{user_id},#{dept_id})
    </insert>

    <delete id="deleteRoleIdByUserId">
        delete from t_user_role where user_id = #{id}
    </delete>

    <delete id="deleteByUserId">
        delete from t_user where id = #{id}
    </delete>

    <delete id="deleteDeptIdByUserId">
        delete from t_user_dept where user_id = #{id}
    </delete>

    <select id="findPage" parameterType="string" resultType="css.security.entity.SysUser">
        select * from t_user WHERE 1=1
        <if test="queryString!=null and queryString.length>0">
            <bind name="test" value="'%'+queryString+'%'"></bind>
            AND username like #{test}
        </if>
        <if test="deptId != null and deptId != 0">
            AND (dept_id = #{deptId} OR dept_id IN ( SELECT t.dept_id FROM t_dept t WHERE FIND_IN_SET (#{deptId},ancestors) ))
        </if>
    </select>

    <select id="findById" resultType="css.security.entity.SysUser">
        select * from t_user where id = #{id}
    </select>

    <select id="findRoleIdsByUserId" resultType="java.lang.Integer">
        select role_id from t_user_role where user_id = #{id}
    </select>

    <select id="findUserPage" resultType="css.security.entity.SysUser">
        select * from t_user
    </select>

    <select id="selectByDeptId" resultType="css.security.entity.Dept">
        select * from t_dept where dept_id = #{deptid}
    </select>

    <select id="selectUserList" parameterType="css.security.entity.SysUser" resultType="css.security.entity.SysUser">
        select * from t_user WHERE 1=1
        <if test="user.username !=null and user.username.length>0">
            <bind name="test" value="'%'+user.username+'%'"></bind>
            AND username like #{test}
        </if>
        <if test="user.deptid != null and user.deptid != 0">
            AND (dept_id = #{user.deptid} OR dept_id IN ( SELECT t.dept_id FROM t_dept t WHERE cast(#{user.deptid} as VARCHAR) = ANY(STRING_TO_ARRAY(ancestors, ',')) ))
        </if>
    </select>

    <select id="findDeptIdsByUserId" resultType="java.lang.Integer">
        select dept_id from t_user_dept where user_id = #{id}
    </select>

    <select id="selectUserListByDept" resultType="java.lang.Integer">
        select user_id from t_user_dept where dept_id = #{deptid}
    </select>


</mapper>